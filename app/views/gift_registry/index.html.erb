<div class="min-h-screen bg-[#73C8A9]/20 pt-16 pb-24">
  <div class="container px-4 mx-auto">
    <div class="flex items-center justify-between mb-10">
      <h1 class="text-3xl font-serif text-[#2D3047]">Lista de Presentes</h1>
      <div class="flex items-center space-x-4">
        <a href="<%= family_purchases_path(token: session[:family_token]) %>" class="flex items-center text-[#2D3047] hover:text-[#2D3047]/80 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
          <span class="hidden sm:inline">Minhas Compras</span>
        </a>
        <a href="<%= cart_path %>" class="relative">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-[#2D3047]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          <% if session[:cart].present? && session[:cart].any? %>
            <%= render partial: "gift_registry/cart_counter", locals: { count: session[:cart].size } %>
          <% end %>
        </a>
      </div>
    </div>
    <% if flash[:notice] && !flash[:notice].to_s.start_with?('admin_') %>
      <div class="relative px-4 py-3 mb-6 text-green-700 bg-green-100 border border-green-400 rounded" role="alert">
        <span class="block sm:inline"><%= flash[:notice] %></span>
      </div>
    <% end %>
    <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
      <% @gift_items.each do |gift_item| %>
        <div class="overflow-hidden transition-transform bg-white rounded-lg shadow-lg hover:scale-105">
          <div class="h-64 overflow-hidden">
            <% if gift_item.image.present? %>
              <%= image_tag gift_item.image, class: "w-full h-full object-cover" %>
            <% else %>
              <div class="flex items-center justify-center w-full h-full bg-gray-200">
                <span class="text-gray-400">Imagem não disponível</span>
              </div>
            <% end %>
          </div>
          <div class="p-6">
            <h3 class="text-xl font-serif text-[#2D3047] mb-2"><%= gift_item.name %></h3>
            <p class="text-lg font-bold text-[#2D3047] mb-6">R$ <%= number_with_precision(gift_item.price, precision: 2, separator: ',') %></p>
            <div class="flex space-x-2">
              <%= button_to add_to_cart_path(gift_item), method: :post,
                  class: "flex-1 py-2 px-4 bg-[#73C8A9] text-white rounded-md hover:bg-[#73C8A9]/90 transition-colors",
                  data: { turbo_frame: "_top", turbo_method: :post } do %>
                Adicionar ao Carrinho
              <% end %>
              <%= button_to buy_now_path(gift_item), method: :post, class: "flex-1 py-2 px-4 bg-[#2D3047] text-white rounded-md hover:bg-[#2D3047]/90 transition-colors" do %>
                Comprar Agora
              <% end %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
    <div class="mt-10 text-center">
      <a href="<%= root_path %>" class="font-medium text-[#73C8A9] hover:text-[#73C8A9]/80">
        Voltar ao início
      </a>
    </div>
  </div>
</div>

<!-- Container para toasts -->
<div id="toast-container"></div>

<!-- Modificar script que não está funcionando com Turbo -->
<script>
  document.addEventListener('turbo:load', function() {
    // Verificar se existem mensagens de toast pendentes
    const pendingToasts = document.querySelectorAll('.toast-message');
    if (pendingToasts.length > 0) {
      pendingToasts.forEach(function(toast) {
        const message = toast.getAttribute('data-toast-message-value');
        if (message) {
          showToast(message);
        }
        // Remover após exibir
        toast.remove();
      });
    }
  });
</script>
